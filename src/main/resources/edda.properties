# For more information see: https://github.com/Netflix/edda/wiki/Configuration
#
# $collection in later options can be subsituted with one of the following
# collection names:
#
# aws.addresses
# aws.autoScalingGroups
# aws.buckets
# aws.images
# aws.instances
# aws.launchConfigurations
# aws.loadBalancers
# aws.securityGroups
# aws.snapshots
# aws.tags
# aws.volumes
# group.autoScalingGroups
# view.instances
# view.loadBalancerInstances
# view.simpleQueues

#######################################################################
#
# General Options
#
#######################################################################

#
# Set if this instance will be polling multiple accounts
# value can be comma separated, each value can be substituted
# for $account in later options
# 
# edda.accounts=

#       
# Set the region for the AWS endpoints 
#
#
edda.region=us-east-1

# edda.collection.enabled=false
# edda.crawler.enabled=false
# edda.collection.aws.autoScalingGroups.enabled=true
# edda.crawler.aws.autoScalingGroups.enabled=true

# edda.collection.aws.hostedRecords.enabled=false
# edda.crawler.aws.hostedRecords.enabled=false
# edda.collection.aws.databases.enabled=false
# edda.crawler.aws.databases.enabled=false
edda.collection.aws.iamUsers.enabled=false
edda.crawler.aws.iamUsers.enabled=false
edda.collection.aws.iamGroups.enabled=false
edda.crawler.aws.iamGroups.enabled=false
edda.collection.aws.iamRoles.enabled=false
edda.crawler.aws.iamRoles.enabled=false
edda.collection.aws.iamVirtualMFADevices.enabled=false
edda.crawler.aws.iamVirtualMFADevices.enabled=false

edda.datastore.class=com.netflix.edda.elasticsearch.ElasticSearchDatastore
edda.elector.class=com.netflix.edda.elasticsearch.ElasticSearchElector
edda.elasticsearch.cluster=elasticsearch
edda.elasticsearch.address=127.0.0.1:9300
//edda.elasticsearch.address=es.edda-test.us-east-1.dyntest.netflix.net:7102
edda.elasticsearch.shards=1
edda.elasticsearch.replicas=0

#
# Set a region for a specific account
#
# edda.$account.region=us-east-1

#######################################################################
#
# AWS Options
#
#######################################################################

#
# Set aws access keys, leave unset to use the default aws credential provider chain
#
# edda.aws.accessKey=
# edda.aws.secretKey=

#
# Set aws keys per account
#
# edda.$account.aws.accessKey=
# edda.$account.aws.secretKey=


#######################################################################
#
# Collection Options
#
#######################################################################
#
# how frequently should the Secondary Edda servers refresh the in-memory cache
# value is in milliseconds
#
edda.collection.cache.refresh=30000

#
# the cache refresh rates per account/collection
#
# edda.collection.$account.$collection.cache.refresh=30000

#
# How frequently should the Primary Edda server crawl the resources
# for updates.  The value is in milliseconds
#
edda.collection.refresh=120000
#refresh cloudformation data every hour by default
edda.collection.aws.stacks.refresh=3600000

#
# Set crawl rate per collection
#
# edda.collection.$account.$collection.refresh=60000

#
# Stagger the collection load from the datastore so that
# we dont hammer the datastore on startup
#
edda.collection.jitter.enabled=false

#
# enable/disable a collection.  Value is boolean 
#
# edda.collection.$account.$collection.enabled=false

#######################################################################
#
# Crawler Options
#
#######################################################################

#
# Field patterns to serialize to JSON when converting a Java Bean to a JSON document
#
edda.bean.argPattern=[^a-zA-Z0-9_]

# 
# List of tags (comma seperated) to suppress the values
# of when crawling AWS resources.  This is for tags where
# the value is constantly changing (ie timestamps)
#
# edda.crawler.aws.suppressTags=myTag

#
# sometimes AWS does not return tags.  If tags are actively used on your
# collections this will cause false document revisions as the tags come and go
# from the crawled AWS result.  Enable this boolean option to 
# cause Edda to ignore crawl results that do not contain tags
#
# edda.crawler.$account.$collection.abortWithoutTags=true

#
# enable/disable a crawler for a collection.  Rarely used, you should
# probably disable the collection instead of the crawler.
#
# edda.crawler.$account.$collection.enabled=false

#######################################################################
#
# Elector Options
#
#######################################################################

#
# how frequently should leadership elections happen.
# value is in milliseconds.
#
edda.elector.refresh=10000

# 
# name of the mongoDB collection where leadership elections are run and
# the results stored.
#
edda.elector.mongo.collectionName=sys.monitor

#  
# timeout value to impeach current leader if they have been idle.
# the value is in milliseconds.
#
edda.elector.mongo.leaderTimeout=30000

#
# environment variable to use to determine unique id for this host
# to be used for leadership elections
#
edda.elector.mongo.uniqueEnvName=EC2_INSTANCE_ID

#######################################################################
#
# MongoDB Options
#
#######################################################################
#
# host:port for where mongoDB is running.  If using a replication Set this value
# can be a comma seperated list of all the members of the set.
#
edda.mongo.address=127.0.0.1:27017
#
# name of the mongoDB database where Edda will store the results
#
edda.mongo.database=edda

#
# username and password for how to connect to MongoDB is required.
#
edda.mongo.user=
edda.mongo.password=

#
# set MongoDB data per account or even per collection
#
# edda.mongo.$account.address=
# edda.mongo.$account.user=
# edda.mongo.$account.password=
#
# edda.mongo.$account.$collection.address=
# edda.mongo.$account.$collection.user=
# edda.mongo.$account.$collection.password=

