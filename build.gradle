// Establish version and status
ext.githubProjectName = rootProject.name // Change if github project name is not the same as the root project's name
group = "com.netflix.${githubProjectName}"

buildscript {
    repositories {
        mavenLocal()
        mavenCentral() // maven { url 'http://jcenter.bintray.com' }
    }
    apply from: file('gradle/buildscript.gradle'), to: buildscript 
}

allprojects {
    repositories { 
        mavenCentral() // maven { url: 'http://jcenter.bintray.com' }
    }
}

apply from: file('gradle/convention.gradle')
apply from: file('gradle/maven.gradle')
apply from: file('gradle/check.gradle')
apply from: file('gradle/license.gradle')
apply from: file('gradle/release.gradle')

apply plugin: 'war'
apply plugin: 'jetty'
apply plugin: 'eclipse'
apply plugin: 'idea'

dependencies {
    compile 'javax.ws.rs:jsr311-api:1.1.1'
    compile 'com.sun.jersey:jersey-core:1.11'
    compile 'com.sun.jersey:jersey-server:1.11'
    compile 'com.sun.jersey:jersey-servlet:1.11'
    compile 'org.slf4j:slf4j-api:1.6.4'
    compile 'org.eclipse.jetty:jetty-server:9.2.6.v20141205'
    compile 'org.eclipse.jetty:jetty-servlet:9.2.6.v20141205'
    compile 'org.eclipse.jetty:jetty-servlets:9.2.6.v20141205'
    compile('com.amazonaws:aws-java-sdk:1.9.6') {
        exclude group:'org.codehaus.jackson'
    }
    compile 'joda-time:joda-time:2.2'
    compile 'org.joda:joda-convert:1.2'
    compile 'org.codehaus.jackson:jackson-core-asl:1.9.2'
    compile 'org.codehaus.jackson:jackson-mapper-asl:1.9.2'
    compile 'commons-beanutils:commons-beanutils:1.8.2'
    compile 'commons-collections:commons-collections:3.2.1'
    compile 'commons-io:commons-io:2.4'
    compile 'com.netflix.servo:servo-core:0.4.10'
    compile 'com.googlecode.java-diff-utils:diffutils:1.2.1'

    compile 'com.netflix.archaius:archaius-core:0.5.6'

    compile 'org.mongodb:mongo-java-driver:2.6.5'
    compile 'org.elasticsearch:elasticsearch:0.90.0'
    compile 'com.spatial4j:spatial4j:0.3'

    // for some reason 'org.apache.httpcomponents:httpclient:4.2.1' is causing 
    // scalac to generate 'S3ObjectInputStream.class is broken' erro
    compile 'org.apache.httpcomponents:httpclient:4.1'
    
    testCompile 'log4j:log4j:1.2.12'
    testCompile 'org.testng:testng:6.1.1'
    testCompile 'org.mockito:mockito-core:1.8.5'
    testCompile 'org.scalatest:scalatest_2.11:3.0.0-SNAP3'
    
    runtime 'org.slf4j:slf4j-log4j12:1.6.1'

    providedCompile 'javax.servlet:servlet-api:2.5'

    // Libraries needed to run the scala tools
    scalaTools 'org.scala-lang:scala-compiler:2.11.5'
    scalaTools 'org.scala-lang:scala-library:2.11.5'

    // Libraries needed for scala api
    compile 'org.scala-lang:scala-library:2.11.5'
    compile 'org.scala-lang:scala-actors:2.11.5'
    //add parsers
    compile 'org.scala-lang.modules:scala-parser-combinators_2.11:1.0.2'
}

compileJava {}

compileScala {
    scalaCompileOptions.additionalParameters = ["-feature"]
}

test << {
    ant.taskdef(name: 'scalatest', classname: 'org.scalatest.tools.ScalaTestAntTask', classpath: classpath.asPath)
    ant.scalatest(runpath: testClassesDir, haltonfailure: 'true', fork: 'false') 
    {
     //ant.scalatest(runpath: testClassesDir, haltonfailure: 'true', fork: 'false', suite: 'com.netflix.edda.UtilsTest') {
        reporter(type: 'stdout')
    }
}

test.outputs.upToDateWhen { false }

import nl.javadude.gradle.plugins.license.License
tasks.withType(License).each { licenseTask ->
    licenseTask.exclude '**/*.json'
    licenseTask.exclude '**/*.properties'
}

jettyRun {
 webXml = file('src/main/webapp/WEB-INF/web.xml')
}

httpPort = 8080
stopPort = 9080
stopKey  = "stopKey"

